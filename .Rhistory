solidHeader = TRUE, status = "warning", collapsible = TRUE, width = 12,
fluidRow(
column(3,align = "center", style='padding-left: 20px; padding-right:20px;',
downloadButton('mmpdownload','Download MES Parameters Data')
)
)
)
)
), #end tabItem
tabItem(tabName = "multimestimetab",
fluidRow(
column(12,
box(title = "MES Timestamp Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("multiMEStime")
)
)
),
fluidRow(
box(title = "Download Button",
solidHeader = TRUE, status = "warning", collapsible = TRUE, width = 12,
fluidRow(
column(3,align = "center", style='padding-left: 20px; padding-right:20px;',
downloadButton('mmtdownload','Download MES Timestamp Data')
)
)
)
)
), #end tabItem
tabItem(tabName = "multimessubmitterstab",
fluidRow(
column(12,
box(title = "MES Submitter Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("multiMESsubmitter")
)
)
),
fluidRow(
box(title = "Download Button",
solidHeader = TRUE, status = "warning", collapsible = TRUE, width = 12,
fluidRow(
column(3,align = "center", style='padding-left: 20px; padding-right:20px;',
downloadButton('mmsdownload','Download MES Submitter Data')
)
)
)
)
), #end tabItem
tabItem(tabName = "multimestotaltab",
fluidRow(
column(12,
box(title = "MES Total Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("multiMEStotal")
)
)
),
fluidRow(
box(title = "Download Button",
solidHeader = TRUE, status = "warning", collapsible = TRUE, width = 12,
fluidRow(
column(3,align = "center", style='padding-left: 20px; padding-right:20px;',
downloadButton('mmtodownload','Download MES Total Data')
)
)
)
)
), #end tabItem
tabItem(tabName = "taperedmesparametersandyieldtab",
fluidRow(
column(3,
box(title = "Temperature Parameters",
solidHeader = TRUE, status = "primary", collapsible = TRUE,
width = 12,
selectInput("taperedtaritempcolumns",
label = NULL,
choices = tapered_tari_temp_columns,
multiple = TRUE,
selectize = TRUE,
selected = NULL
)
)
),
column(3,
box(title = "Pressure Parameters",
solidHeader = TRUE, status = "primary", collapsible = TRUE, width = 12,
selectInput("taperedtaripresscolumns",
label = NULL,
choices = tapered_tari_press_columns,
multiple = TRUE,
selectize = TRUE,
selected = NULL
)
)
),
column(3,
box(title = "Speed Parameters",
solidHeader = TRUE, status = "primary", collapsible = TRUE, width = 12,
selectInput("taperedtarispeedcolumns",
label = NULL,
choices = tapered_tari_speed_columns,
multiple = TRUE,
selectize = TRUE,
selected = NULL
)
)
),
column(3,
box(title = "Exra Parameters",
solidHeader = TRUE, status = "primary", collapsible = TRUE, width = 12,
selectInput("taperedtariextracolumns",
label = NULL,
choices = tapered_tari_extra_columns,
multiple = TRUE,
selectize = TRUE,
selected = c("Material Number", "SAP Batch Number",
"Start Date", "Start Qty", "Start Qty Unit",
"Yield Qty", "Scrap Qty",
"Contribution to Plant Level Yield VOP",
"Contribution to Plant Level Scrap VOP",
"Contribution to Plant Level Total VOP",
"Yield Percentage", "Scrap Percentage")
)
)
)
),
fluidRow(
column(12,
box(title = "MES Parameters and Yield Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("taperedMESparametersandyield")
)
)
),
fluidRow(
box(title = "Download Button",
solidHeader = TRUE, status = "warning", collapsible = TRUE, width = 12,
fluidRow(
column(3,align = "center", style='padding-left: 20px; padding-right:20px;',
downloadButton('tmpydownload','Download MES Parameters and Yield Data')
)
)
)
)
), #end tabItem
tabItem(tabName = "taperedmesparameterstab",
fluidRow(
column(12,
box(title = "MES Parameters Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("taperedMESparameters")
)
)
),
fluidRow(
box(title = "Download Button",
solidHeader = TRUE, status = "warning", collapsible = TRUE, width = 12,
fluidRow(
column(3,align = "center", style='padding-left: 20px; padding-right:20px;',
downloadButton('tmpdownload','Download MES Parameters Data')
)
)
)
)
), #end tabItem
tabItem(tabName = "taperedmestimetab",
fluidRow(
column(12,
box(title = "MES Timestamp Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("taperedMEStime")
)
)
),
fluidRow(
box(title = "Download Button",
solidHeader = TRUE, status = "warning", collapsible = TRUE, width = 12,
fluidRow(
column(3,align = "center", style='padding-left: 20px; padding-right:20px;',
downloadButton('tmtdownload','Download MES Timestamp Data')
)
)
)
)
), #end tabItem
tabItem(tabName = "taperedmessubmitterstab",
fluidRow(
column(12,
box(title = "MES Submitter Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("taperedMESsubmitter")
)
)
),
fluidRow(
box(title = "Download Button",
solidHeader = TRUE, status = "warning", collapsible = TRUE, width = 12,
fluidRow(
column(3,align = "center", style='padding-left: 20px; padding-right:20px;',
downloadButton('tmsdownload','Download MES Submitter Data')
)
)
)
)
), #end tabItem
tabItem(tabName = "taperedmestotaltab",
fluidRow(
column(12,
box(title = "MES Total Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("taperedMEStotal")
)
)
),
fluidRow(
box(title = "Download Button",
solidHeader = TRUE, status = "warning", collapsible = TRUE, width = 12,
fluidRow(
column(3,align = "center", style='padding-left: 20px; padding-right:20px;',
downloadButton('tmtodownload','Download MES Total Data')
)
)
)
)
), #end tabItem
tabItem(tabName = "singlescrapcodestab",
fluidRow(
column(12,
box(title = "Scrapcode Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("singlescrapcodes")
)
)
)
), #end tabItem
tabItem(tabName = "mutliscrapcodestab",
fluidRow(
column(12,
box(title = "Scrapcode Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("multiscrapcodes")
)
)
)
), #end tabItem
tabItem(tabName = "taperedscrapcodestab",
fluidRow(
column(12,
box(title = "MES Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("taperedscrapcodes")
)
)
)
), #end tabItem
tabItem(tabName = "resininfotab",
fluidRow(
column(12,
box(title = "Resin Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("resin_data_ui")
)
)
)
), #end tabItem
tabItem(tabName = "screwinfotab",
fluidRow(
column(12,
box(title = "Screw Data",
solidHeader = TRUE, status = "success", collapsible = TRUE, width = 12,
DT::dataTableOutput("screw_data_ui")
)
)
)
), #end tabItem
tabItem(tabName = "singleshoppingcarttab",
fluidRow(
box(title = "Data Table",
width = 12,
DT::dataTableOutput("singleshoppingcartpps"),
fluidRow(
downloadButton('singlecartdownloadpps',
'Download Single Shopping Cart PPS Data')
)
)
) #end fluidRow
), #end tabItem
tabItem(tabName = "multishoppingcarttab",
fluidRow(
column(12,
DT::dataTableOutput("multishoppingcartpps"),
fluidRow(
downloadButton('multicartdownloadpps',
'Download Multi-Layer Shopping Cart PPS Data')
)
)
)
), #end tabItem
tabItem(tabName = "taperedshoppingcarttab",
fluidRow(
column(12,
DT::dataTableOutput("taperedshoppingcartpps"),
fluidRow(
downloadButton('taperedcartdownloadpps',
'Download Tapered Shopping Cart PPS Data')
)
)
)
), #end tabItem
tabItem(tabName = "totalshoppingcarttab",
fluidRow(
column(12,
DT::dataTableOutput("totalshoppingcartpps"),
fluidRow(
downloadButton('totalcartdownloadpps',
'Download Total Shopping Cart PPS Data')
)
)
)
), #end tabItem
tabItem(tabName="MESDataAnalysis",
# Some custom CSS
tags$head(
tags$style(HTML("
/* Smaller font for preformatted text */
pre, table.table {
font-size: smaller;
}
body {
min-height: 2000px;
}
.option-group {
border: 1px solid #ccc;
border-radius: 6px;
padding: 0px 5px;
margin: 5px -10px;
background-color: #c1c1c1;
}
.option-header {
color: #000000;
text-transform: uppercase;
margin-bottom: 5px;
}
.option-label{
color: #000000;
margin-bottom: 1px;
padding: 0px 5px;
}
.inputbox{
background-color: #000000;
}
"))),
fluidRow(
column(width = 3,
box(title = "Explorer",
solidHeader = TRUE, status = "info", collapsible = TRUE, width = 12,
div(class = "option-group",
radioButtons("Data_set", "Data Set",
c("Single", "Multi","Tapered","Upload"), inline = TRUE),
conditionalPanel(
"input.Data_set ==='Upload'",
div(style="display: inline-block;vertical-align:top;width: 250px;",
fileInput("uploadfile", "Choose csv File",
multiple = TRUE,
accept = c("text/csv",
"text/comma-separated-values,text/plain",
".csv"))),
div(style="display: inline-block;vertical-align:top;width: 50px;",
checkboxInput("header", "Header", TRUE)),
checkboxInput("Preview","Preview",F),
#preview the uploaded dataset
conditionalPanel(
condition="input.Preview",
DT::dataTableOutput("UploadDataPreview")
)
)#end conditional panel for the upload file
),# end Data Set section
div(class="option-group",
div(class="option-header","Plot"),
textInput("plottitle","Plot Title",placeholder = NULL),
div(style="display: inline-block;vertical-align:top;width: 150px;",
uiOutput("Xvar_ui")),
div(style="display: inline-block;vertical-align:top;width: 150px;",
uiOutput("Yvar_ui")),
conditionalPanel(
condition = "input.Data_set !='Upload'",
checkboxGroupInput("PlotType","Plot Type",
choiceNames =
list("Scatter","Line"),
choiceValues =
list("Scatter","Line"),
selected = "Scatter",inline = T
),
uiOutput("Groupby_ui")
) # End conditionalpanel for Mtcars
),#end Plot section
div(class="option-group",
div(class="option-header","Filters"),
dateRangeInput("daterange6", "Date range:",
startview = "decade")
# dropdownButton(
#     label = "Filter",status = "default", width = 80,
#     #actionButton(inputId = "de", label = "Sort A to Z", icon = icon("sort-alpha-asc")),# filter  (filter icon)
#     #actionButton(inputId = "as", label = "Sort Z to A", icon = icon("sort-alpha-desc")),
#
#     tags$div(
#       class = "container",
#       uiOutput("filter_ui")   # to have reactive dropdown list
#     ),
#     actionButton(inputId = "filter_select", label = "(un)select all")  #an action button to select or unselect all
#   ) #end Filter
),#End Filter section
div(class = "option-group",
div(class = "option-header", "Download"),
radioButtons('GraphFormat', 'Graph format', c('PDF', 'png'),
inline = TRUE),
downloadButton("GraphDownload_DataAnalysis","Download Graph")
)#end download secion
)
), #end plot managing section
column(width = 9, class = "well",
box(title = "Plot", solidHeader = TRUE, status = "primary", collapsible = TRUE, width = 12,
column(width = 6,
uiOutput("plotui")
),
column(width = 6,
plotOutput("MES_plot2")
)),#end plot section
fluidRow(
h4("Points selected by brushing"),
DT::dataTableOutput("plot_brushed_points")
), #end brushed points section
fluidRow(
downloadButton("SelectedDataDownload_DataAnalysis","Download Selected Data")
)# end download dataset section
)
)
)#end Analysis Tool
),#end tabItems
absolutePanel(
#this will display the title
htmlOutput("currenttabtitle", container = tags$h2, style = "color: white"),
draggable = F, fixed = F,
style = "z-index: 999999; top: -5px; left: 40%;"
),
#create a pop up window for the shopping cart
absolutePanel(
actionButton("ShoppingCart","",icon=icon("shopping-cart","fa-2x"),width = 80 ),
#verbatimTextOutput("ShoppingCart_Count"),     # Try to add the number of part-number in shopping cart behind the cart icon
bsModal("modalExample", "Shopping Cart", "ShoppingCart", size = "default",
tabsetPanel(
tabPanel("Single-Extrusion Cart",
textInput("SinglePartNum_input","Part Number"),
actionButton("singleMadd_button","Add"),
dataTableOutput("singleshoppingcartparts"),
dataTableOutput("singleshoppingcart")
),
tabPanel("Multi-Layer Extrusion Cart",
textInput("MultiPartNum_input","Part Number"),
actionButton("multiMadd_button","Add"),
dataTableOutput("multishoppingcartparts"),
dataTableOutput("multishoppingcart")
#Multi-layer Extrusion Parts
),
tabPanel("Tapered Extrusion Cart",
textInput("TaperedPartNum_input","Part Number"),
actionButton("taperedMadd_button","Add"),
dataTableOutput("taperedshoppingcartparts"),
dataTableOutput("taperedshoppingcart")
#Tapered Extrusion Parts
),
tabPanel("Total Extrusion Cart",
#Total Extrusion Parts
dataTableOutput("totalshoppingcartparts"),
dataTableOutput("totalshoppingcart")
)
)
),
draggable = F,right = 10,top = 3, fixed = F,
style = "z-index: 999999"
) #end absolutePanel
)#end dashboardbody
) #end UI
runApp('App_Server_Q3.R')
runApp('App_Server_Q3.R')
summary(multi_tari_parameter_and_yield_data$`Yield Percentage`)
?summary
summary(multi_tari_parameter_and_yield_data$`Ext-A Barrel 1 Temp`)
summary(c(1,23,4,5,6,7,7))
summary(as.numeric(multi_tari_parameter_and_yield_data$`Yield Percentage`))
summary(as.numeric(single_tari_parameter_and_yield_data$`Yield Percentage`))
runApp('App_Server_Q3.R')
?radioButtons
runApp('Test_Analaysis')
runApp('Test_Analaysis')
runApp('Test_Analaysis')
runApp('Test_Analaysis')
runApp('Test_Analaysis')
runApp('Test_Analaysis')
install.packages("plotly")
install.packages("gganimate")
install.packages("ggExtra")
runApp('App_Server_Q3.R')
install.packages("ggdendro")
runApp('Test_Analaysis')
runApp('Test_Analaysis')
runApp('Test_Analaysis')
runApp('Test_Analaysis')
03 > 2
03
?substring
