}#end server
library(shiny)
library(digest)
ctp_password <- "8ecce14de44ba70830bf8e2b5036276d7c59584f35c9754930849208b04e5567d8be44a8271726feed9d3a3e225a2cd4424a6ca5937685a40ed27eab7240ddd9"
server <- function(input, output, session) {
}#end server
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
library(shiny)
library(digest)
ctp_password <- "8ecce14de44ba70830bf8e2b5036276d7c59584f35c9754930849208b04e5567d8be44a8271726feed9d3a3e225a2cd4424a6ca5937685a40ed27eab7240ddd9"
server <- function(input, output, ) {
}#end server
library(shiny)
library(digest)
ctp_password <- "8ecce14de44ba70830bf8e2b5036276d7c59584f35c9754930849208b04e5567d8be44a8271726feed9d3a3e225a2cd4424a6ca5937685a40ed27eab7240ddd9"
server <- function(input, output ) {
}#end server
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
source('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
source('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
require(shiny)
require(bootstrap)
require(jpeg)
require(ggplot2)
require(DT)
require(stringr)
require(gsubfn)
require(proto)
require(sqldf)
require(shinyjs)
require(shinyBS)
library(shinydashboard)
library(googleVis)
# Define UI for application
ui <- dashboardPage(
dashboardHeader(title = "Chronos - PD Extrusion Tracker",
titleWidth = 350
),#end dashboardHeader
dashboardSidebar(disable = TRUE),#end dashboardSidebar
dashboardBody(
fluidRow(
box(title = "Please Select Your User Group",
width = 6,
actionButton(inputId = "generaluserlogon", "General User"),
actionButton(inputId = "engineerlogon", "CTP PD Engineer"),
actionButton(inputId = "techlogon", "CTP PD Technician")
), #end box
renderUI("logonbox")
) #end fluidRow
)#end dashboardBody
) #end ui
library(shiny)
library(shiny)
library(digest)
ctp_password <- "8ecce14de44ba70830bf8e2b5036276d7c59584f35c9754930849208b04e5567d8be44a8271726feed9d3a3e225a2cd4424a6ca5937685a40ed27eab7240ddd9"
userpermissions <- FALSE
server <- function(input, output, session) {
output$logonbox <- FALSE
observeEvent(input$engineerlogon,{
output$logonbox <- renderUI({
box(
"It Worked engineer"
)
})
})
observeEvent(input$techlogon,{
output$logonbox <- renderUI({
box(
"It Worked tech"
)
})
})
}#end server
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
library(shiny)
library(digest)
ctp_password <- "8ecce14de44ba70830bf8e2b5036276d7c59584f35c9754930849208b04e5567d8be44a8271726feed9d3a3e225a2cd4424a6ca5937685a40ed27eab7240ddd9"
userpermissions <- FALSE
server <- function(input, output, session) {
observeEvent(input$engineerlogon,{
output$logonbox <- renderUI({
box(
"It Worked engineer"
)
})
})
observeEvent(input$techlogon,{
output$logonbox <- renderUI({
box(
"It Worked tech"
)
})
})
}#end server
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
?renderUI
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp("//Mgrovef1/shared/Operations/EXTRUSIO/Extrusion Application/Files/RunMe.R")
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
output$loginbox <- renderUI(
box(title = "Please enter the information",
solidHeader = TRUE,
status = "info",
textInput("techusername", "Please Enter Your Username"),
textInput("techpassword", "Please Enter Your Password"),
actionButton(inputId = "techloginbutton", "General User")
)
) #end renderUI
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
digest("winningteam")
digest("winningteam", algo = "sha512")
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp("//Mgrovef1/shared/Operations/EXTRUSIO/Extrusion Application/Files/RunMe.R")
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
input_hash <- digest(input$engineerpassword, algo = "sha512")
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
?ns
?NS
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/tracker_RunMe.R')
?readr
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
require(shiny)
require(bootstrap)
require(jpeg)
require(ggplot2)
require(DT)
require(stringr)
require(gsubfn)
require(proto)
require(sqldf)
require(shinyjs)
require(shinyBS)
require(shinydashboard)
require(googleVis)
#this is the login in module for the shiny app. For further information look at module information
#on shiny.
ctp_password <- "8ecce14de44ba70830bf8e2b5036276d7c59584f35c9754930849208b04e5567d8be44a8271726feed9d3a3e225a2cd4424a6ca5937685a40ed27eab7240ddd9"
login_ui <- functon(id){
ns <- NS(id)
tagList(
shinyUI(dashboardPage(
useShinyjs(),
dashboardHeader(title = "Chronos - PD Extrusion Tracker",
titleWidth = 350
),#end dashboardHeader
dashboardSidebar(disable = TRUE),#end dashboardSidebar
dashboardBody(
fluidRow(
box(title = "Please Select Your User Group",
solidHeader = TRUE,
status = "primary",
width = 6,
actionButton(inputId = ns("generaluserlogin"), "General User"),
actionButton(inputId = ns("engineerlogin"), "CTP PD Engineer"),
actionButton(inputId = ns("techlogin"), "CTP PD Technician")
), #end box
uiOutput("loginbox")
) #end fluidRow
)#end dashboardBody
)) #end ui
)
}
login_server <- function(input, output, session){
userpermission <- reactiveValues(data = FALSE)
tech_username <- reactiveValues(data = "blank")
observeEvent(input$engineerlogin,{
output$loginbox <- renderUI(
box(title = "Please enter the information",
solidHeader = TRUE,
status = "info",
passwordInput("engineerpassword", "Please Enter the CTP PD Engineer Password"),
actionButton(inputId = "engineerloginbutton", "Login")
)
)#end renderUI
}) #end observeEvent
observeEvent(input$techlogin,{
output$loginbox <- renderUI(
box(title = "Please enter the information",
solidHeader = TRUE,
status = "info",
textInput("techusername", "Please Enter Your Username"),
textInput("techpassword", "Please Enter Your Password"),
actionButton(inputId = "techloginbutton", "General User")
)
) #end renderUI
}) #end observeEvent
observeEvent(input$engineerloginbutton,{
print("it worked")
input_hash <- digest(input$engineerpassword, algo = "sha512")
if (input_hash == ctp_password){
#I will render the UI
print("it equals")
}
else{
print("did not equal")
#create a popup box that the info was incorrect and clear the textbox
}
})#end observeEvent
observeEvent(input$techloginbutton,{
input_hash <- digest(input$techpassword, algo = "sha512")
if (input_hash == ctp_password){
#I will render the UI
}
else{
#create a popup box that the info was incorrect and clear the textbox
}
})#end observeEvent
}
ui <- login_ui("test")
server <- function(input, output){
callModule(login_server, "test")
}
shinyApp(ui, server)
require(shiny)
require(bootstrap)
require(jpeg)
require(ggplot2)
require(DT)
require(stringr)
require(gsubfn)
require(proto)
require(sqldf)
require(shinyjs)
require(shinyBS)
require(shinydashboard)
require(googleVis)
#this is the login in module for the shiny app. For further information look at module information
#on shiny.
ctp_password <- "8ecce14de44ba70830bf8e2b5036276d7c59584f35c9754930849208b04e5567d8be44a8271726feed9d3a3e225a2cd4424a6ca5937685a40ed27eab7240ddd9"
login_ui <- functon(id){
ns <- NS(id)
tagList(
shinyUI(dashboardPage(
useShinyjs(),
dashboardHeader(title = "Chronos - PD Extrusion Tracker",
titleWidth = 350
),#end dashboardHeader
dashboardSidebar(disable = TRUE),#end dashboardSidebar
dashboardBody(
fluidRow(
box(title = "Please Select Your User Group",
solidHeader = TRUE,
status = "primary",
width = 6,
actionButton(inputId = ns("generaluserlogin"), "General User"),
actionButton(inputId = ns("engineerlogin"), "CTP PD Engineer"),
actionButton(inputId = ns("techlogin"), "CTP PD Technician")
), #end box
uiOutput(ns("loginbox"))
) #end fluidRow
)#end dashboardBody
)) #end ui
)
}
login_server <- function(input, output, session){
userpermission <- reactiveValues(data = FALSE)
tech_username <- reactiveValues(data = "blank")
observeEvent(input$engineerlogin,{
output$loginbox <- renderUI(
box(title = "Please enter the information",
solidHeader = TRUE,
status = "info",
passwordInput("engineerpassword", "Please Enter the CTP PD Engineer Password"),
actionButton(inputId = "engineerloginbutton", "Login")
)
)#end renderUI
}) #end observeEvent
observeEvent(input$techlogin,{
output$loginbox <- renderUI(
box(title = "Please enter the information",
solidHeader = TRUE,
status = "info",
textInput("techusername", "Please Enter Your Username"),
textInput("techpassword", "Please Enter Your Password"),
actionButton(inputId = "techloginbutton", "General User")
)
) #end renderUI
}) #end observeEvent
observeEvent(input$engineerloginbutton,{
print("it worked")
input_hash <- digest(input$engineerpassword, algo = "sha512")
if (input_hash == ctp_password){
#I will render the UI
print("it equals")
}
else{
print("did not equal")
#create a popup box that the info was incorrect and clear the textbox
}
})#end observeEvent
observeEvent(input$techloginbutton,{
input_hash <- digest(input$techpassword, algo = "sha512")
if (input_hash == ctp_password){
#I will render the UI
}
else{
#create a popup box that the info was incorrect and clear the textbox
}
})#end observeEvent
}
ui <- login_ui("test")
server <- function(input, output){
callModule(login_server, "test")
}
shinyApp(ui, server)
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
getwd()
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
require(shiny)
require(bootstrap)
require(jpeg)
require(ggplot2)
require(DT)
require(stringr)
require(gsubfn)
require(proto)
require(sqldf)
require(shinyjs)
require(shinyBS)
require(shinydashboard)
require(googleVis)
#this is the login in module for the shiny app. For further information look at module information
#on shiny.
ctp_password <- "8ecce14de44ba70830bf8e2b5036276d7c59584f35c9754930849208b04e5567d8be44a8271726feed9d3a3e225a2cd4424a6ca5937685a40ed27eab7240ddd9"
login_ui <- functon(id) {
ns <- NS(id)
tagList(
shinyUI(dashboardPage(
useShinyjs(),
dashboardHeader(title = "Chronos - PD Extrusion Tracker",
titleWidth = 350
),#end dashboardHeader
dashboardSidebar(disable = TRUE),#end dashboardSidebar
dashboardBody(
fluidRow(
box(title = "Please Select Your User Group",
solidHeader = TRUE,
status = "primary",
width = 6,
actionButton(inputId = ns("generaluserlogin"), "General User"),
actionButton(inputId = ns("engineerlogin"), "CTP PD Engineer"),
actionButton(inputId = ns("techlogin"), "CTP PD Technician")
), #end box
uiOutput("loginbox")
) #end fluidRow
)#end dashboardBody
)) #end ui
)
}
login_server <- function(input, output, session) {
userpermission <- reactiveValues(data = FALSE)
tech_username <- reactiveValues(data = "blank")
observeEvent(input$engineerlogin,{
output$loginbox <- renderUI(
box(title = "Please enter the information",
solidHeader = TRUE,
status = "info",
passwordInput("engineerpassword", "Please Enter the CTP PD Engineer Password"),
actionButton(inputId = "engineerloginbutton", "Login")
)
)#end renderUI
}) #end observeEvent
observeEvent(input$techlogin,{
output$loginbox <- renderUI(
box(title = "Please enter the information",
solidHeader = TRUE,
status = "info",
textInput("techusername", "Please Enter Your Username"),
textInput("techpassword", "Please Enter Your Password"),
actionButton(inputId = "techloginbutton", "General User")
)
) #end renderUI
}) #end observeEvent
observeEvent(input$engineerloginbutton,{
print("it worked")
input_hash <- digest(input$engineerpassword, algo = "sha512")
if (input_hash == ctp_password){
#I will render the UI
print("it equals")
}
else{
print("did not equal")
#create a popup box that the info was incorrect and clear the textbox
}
})#end observeEvent
observeEvent(input$techloginbutton,{
input_hash <- digest(input$techpassword, algo = "sha512")
if (input_hash == ctp_password){
#I will render the UI
}
else{
#create a popup box that the info was incorrect and clear the textbox
}
})#end observeEvent
}
ui <- fluidPage(
login_ui("test")
)
server <- function(input, output, session){
callModule(login_server, "test")
}
shinyApp(ui, server)
login_ui <- functon(id) {
ns <- NS(id)
tagList(
shinyUI(dashboardPage(
useShinyjs(),
dashboardHeader(title = "Chronos - PD Extrusion Tracker",
titleWidth = 350
),#end dashboardHeader
dashboardSidebar(disable = TRUE),#end dashboardSidebar
dashboardBody(
fluidRow(
box(title = "Please Select Your User Group",
solidHeader = TRUE,
status = "primary",
width = 6,
actionButton(inputId = ns("generaluserlogin"), "General User"),
actionButton(inputId = ns("engineerlogin"), "CTP PD Engineer"),
actionButton(inputId = ns("techlogin"), "CTP PD Technician")
), #end box
uiOutput("loginbox")
) #end fluidRow
)#end dashboardBody
)) #end ui
)
}
login_ui <- functon(id) {
ns <- NS(id)
shinyUI(dashboardPage(
useShinyjs(),
dashboardHeader(title = "Chronos - PD Extrusion Tracker",
titleWidth = 350
),#end dashboardHeader
dashboardSidebar(disable = TRUE),#end dashboardSidebar
dashboardBody(
fluidRow(
box(title = "Please Select Your User Group",
solidHeader = TRUE,
status = "primary",
width = 6,
actionButton(inputId = ns("generaluserlogin"), "General User"),
actionButton(inputId = ns("engineerlogin"), "CTP PD Engineer"),
actionButton(inputId = ns("techlogin"), "CTP PD Technician")
), #end box
uiOutput("loginbox")
) #end fluidRow
)#end dashboardBody
)) #end ui
}
login_ui <- functon(id) {
ns <- NS(id)
box(title = "Please Select Your User Group",
solidHeader = TRUE,
status = "primary",
width = 6,
actionButton(inputId = ns("generaluserlogin"), "General User"),
actionButton(inputId = ns("engineerlogin"), "CTP PD Engineer"),
actionButton(inputId = ns("techlogin"), "CTP PD Technician")
), #end box
uiOutput("loginbox")
}
login_ui <- functon(id) {
ns <- NS(id)
tagList(
box(title = "Please Select Your User Group",
solidHeader = TRUE,
status = "primary",
width = 6,
actionButton(inputId = ns("generaluserlogin"), "General User"),
actionButton(inputId = ns("engineerlogin"), "CTP PD Engineer"),
actionButton(inputId = ns("techlogin"), "CTP PD Technician")
), #end box
uiOutput("loginbox")
)
}
ns <- NS(id)
?NS
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('//mgrovef1/shared/Operations/EXTRUSIO/Felipe Correa Netto/CTP Extrusion Order Tracker/Programming/login_ui.R')
runApp('C:/Users/correaf/Desktop/login_module.R')
runApp('C:/Users/correaf/Desktop/login_module.R')
